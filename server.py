from flask import Flask, send_file, request, jsonify
from flask_cors import CORS
import json
import os
import threading
import telebot
from bot import bot, TOKEN  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ç–∞–∫–∂–µ TOKEN

app = Flask(__name__)
CORS(app)

# –î–æ–±–∞–≤–∏–º –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–æ—Ä—Ç–∞ –¥–ª—è Render
port = int(os.environ.get('PORT', 5000))

# –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞
bot_thread = None
bot_started = False

def start_bot():
    global bot_started
    if not bot_started:
        try:
            print("–ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞...")
            bot.infinity_polling()
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {e}")

@app.before_first_request
def init_bot():
    global bot_thread, bot_started
    if not bot_started:
        print("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞...")
        bot_thread = threading.Thread(target=start_bot)
        bot_thread.daemon = True
        bot_thread.start()
        bot_started = True
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–ø—É—Å–∫–µ
        try:
            bot.send_message(1228708306, "üöÄ –ë–æ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

@app.route('/')
def serve_html():
    return send_file('main.html')

@app.route('/config.json')
def serve_config():
    return send_file('config.json')

@app.route('/update_config', methods=['POST'])
def update_config():
    config = request.json
    with open('config.json', 'w') as f:
        json.dump(config, f, indent=4)
    return jsonify({"success": True})

# –î–æ–±–∞–≤–∏–º —Ä–æ—É—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞
@app.route('/bot_status')
def bot_status():
    global bot_started
    try:
        # –ü—Ä–æ–±—É–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        bot.send_message(1228708306, "‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç")
        return jsonify({"status": "running", "bot_started": bot_started})
    except Exception as e:
        return jsonify({"status": "error", "error": str(e), "bot_started": bot_started})

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=port)
